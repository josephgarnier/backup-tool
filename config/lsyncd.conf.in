-- Copyright 2019-present, Joseph Garnier
-- All rights reserved.
--
-- This source code is licensed under the license found in the
-- LICENSE file in the root directory of this source tree.

settings {
	logfile         = "${PROJECT_LOG_FILE}",
	pidfile         = "${PROJECT_LSYNCD_PID_FILE}",
	nodaemon        = false,
	statusFile      = "${PROJECT_LSYNCD_STATUS_FILE}",
	statusInterval  = 3600, -- update status every 20 seconds
	maxProcesses    = 2
}

-- key is full path directory, value is directory name
local sources = {
	["/home/joseph/Documents/Livres"] = "Livres",
	["/home/joseph/Documents/Travail/Recherche/Projets/BeInG"] = "BeInG"
}

local exclude_rules = {
	["/home/joseph/Documents/Livres"] = {},
	["/home/joseph/Documents/Travail/Recherche/Projets/BeInG"] = {
		'/Etat_de_l_Art/video'
	}
}

for source_path, dir_name in pairs(sources) do
	sync {
		default.rsync,
		source = source_path,
		target = "/home/joseph/Dropbox/Backup/" .. dir_name,
		delay  = 3600, -- aggregate events every 3600 seconds
		delete = true, -- --delete: this tells rsync to delete extraneous files from the receiving side (ones that aren't on the sending side), but only for the directories that are being synchronized.
		exclude = exclude_rules[source_path],
		rsync  = {
			binary        = "${PROJECT_SRC_DIR}/lsyncd_handler.sh",
			acls          = true, -- -A, --acls: this option causes rsync to update the destination ACLs to be the same as the source ACLs.
			archive       = true, -- -a, --archive: this is equivalent to -rlptgoD. It is a quick way of saying you want recursion and want to preserve almost everything (with -H being a notable omission).
			checksum      = true, -- -c, --checksum: this changes the way rsync checks if the files have been changed and are in need of a transfer.
			executability = true, -- -E, --executability: this option causes rsync to preserve the executability (or non-executability) of regular files when --perms is not enabled.
			group         = true, -- -g, --group: this option causes rsync to set the group of the destination file to be the same as the source file.
			hard_links    = true, -- -H, --hard-links: this tells rsync to look for hard-linked files in the transfer and link together the corresponding files on the receiving side.
			links         = true, -- -l, --links: when symlinks are encountered, recreate the symlink on the destination.
			owner         = true, -- -o, --owner: this option causes rsync to set the owner of the destination file to be the same as the source file, but only if the receiving rsync is being run as the super-user.
			perms         = true, -- -p, --perms: this option causes the receiving rsync to set the destination permissions to be the same as the source permissions.
			protect_args  = true, -- -s, --protect-args: this option sends all filenames and some options to the remote rsync without allowing the remote shell to interpret them.
			times         = true, -- -t, --times: this tells rsync to transfer modification times along with the files and update them on the remote system.
			verbose       = true, -- -v, --verbose: this option increases the amount of information the daemon logs during its startup phase.
			xattrs        = true, -- -X, --xattrs: this option causes rsync to update the remote extended attributes to be the same as the local ones.
			_extra        = {
				"-i",                -- -i, --itemize-changes: requests a simple itemized list of the changes that are being made to each file, including attribute changes.
				"--log-file=${PROJECT_LOG_FILE}", --log-file=FILE: this option tells the rsync daemon to use the given log-file name instead of using the lqlog filerq setting in the config file.
				"--progress"         -- --progress: this option tells rsync to print information showing the progress of the transfer.
			}
		}
	}
end